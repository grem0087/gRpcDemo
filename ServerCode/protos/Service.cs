// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Dictionary {

  /// <summary>Holder for reflection information generated from service.proto</summary>
  public static partial class ServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1zZXJ2aWNlLnByb3RvIiMKEkRpY3Rpb25hcnlSZXNwb25zZRINCgVib29r",
            "cxgBIAMoCSIiChFEaWN0aW9uYXJ5UmVxdWVzdBINCgVib29rcxgBIAMoCTJK",
            "ChFEaWN0aW9uYXJ5U2VydmljZRI1CgpHZXRCeU5hbWVzEhIuRGljdGlvbmFy",
            "eVJlcXVlc3QaEy5EaWN0aW9uYXJ5UmVzcG9uc2VCDaoCCkRpY3Rpb25hcnli",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Dictionary.DictionaryResponse), global::Dictionary.DictionaryResponse.Parser, new[]{ "Books" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dictionary.DictionaryRequest), global::Dictionary.DictionaryRequest.Parser, new[]{ "Books" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DictionaryResponse : pb::IMessage<DictionaryResponse> {
    private static readonly pb::MessageParser<DictionaryResponse> _parser = new pb::MessageParser<DictionaryResponse>(() => new DictionaryResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DictionaryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dictionary.ServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DictionaryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DictionaryResponse(DictionaryResponse other) : this() {
      books_ = other.books_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DictionaryResponse Clone() {
      return new DictionaryResponse(this);
    }

    /// <summary>Field number for the "books" field.</summary>
    public const int BooksFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_books_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> books_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Books {
      get { return books_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DictionaryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DictionaryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!books_.Equals(other.books_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= books_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      books_.WriteTo(output, _repeated_books_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += books_.CalculateSize(_repeated_books_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DictionaryResponse other) {
      if (other == null) {
        return;
      }
      books_.Add(other.books_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            books_.AddEntriesFrom(input, _repeated_books_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DictionaryRequest : pb::IMessage<DictionaryRequest> {
    private static readonly pb::MessageParser<DictionaryRequest> _parser = new pb::MessageParser<DictionaryRequest>(() => new DictionaryRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DictionaryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dictionary.ServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DictionaryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DictionaryRequest(DictionaryRequest other) : this() {
      books_ = other.books_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DictionaryRequest Clone() {
      return new DictionaryRequest(this);
    }

    /// <summary>Field number for the "books" field.</summary>
    public const int BooksFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_books_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> books_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Books {
      get { return books_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DictionaryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DictionaryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!books_.Equals(other.books_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= books_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      books_.WriteTo(output, _repeated_books_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += books_.CalculateSize(_repeated_books_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DictionaryRequest other) {
      if (other == null) {
        return;
      }
      books_.Add(other.books_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            books_.AddEntriesFrom(input, _repeated_books_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
